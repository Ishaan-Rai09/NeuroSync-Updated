"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_pages-dir-node_components_blockchain_WalletLoginButton_js";
exports.ids = ["_pages-dir-node_components_blockchain_WalletLoginButton_js"];
exports.modules = {

/***/ "(pages-dir-node)/./components/blockchain/WalletLoginButton.js":
/*!****************************************************!*\
  !*** ./components/blockchain/WalletLoginButton.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _useWalletAuth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useWalletAuth */ \"(pages-dir-node)/./components/blockchain/useWalletAuth.js\");\n\n\n\n\n/**\r\n * MetaMask login button component\r\n * Shows a visually appealing button to connect with MetaMask\r\n * and handles authentication flow\r\n */ const WalletLoginButton = ()=>{\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const { connectWallet, authenticate, isConnected, isAuthenticating } = (0,_useWalletAuth__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    const handleWalletLogin = async ()=>{\n        try {\n            setIsLoading(true);\n            setError(null);\n            // First connect wallet if not connected\n            if (!isConnected) {\n                await connectWallet();\n            }\n            // Then authenticate\n            const authResult = await authenticate();\n            if (authResult) {\n                // Redirect to dashboard after successful login\n                router.push('/dashboard');\n            } else {\n                // If authentication returned null, but no error was thrown\n                setError('Authentication failed. Please try again.');\n            }\n        } catch (err) {\n            console.error('Wallet login error:', err);\n            setError(err.message || 'Failed to login with wallet');\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full\",\n        children: [\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4 text-sm text-red-600 bg-red-50 p-3 rounded\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Projects\\\\Dekhte hai\\\\neuroSync\\\\NeuroSync-AI-Frontend\\\\components\\\\blockchain\\\\WalletLoginButton.js\",\n                        lineNumber: 54,\n                        columnNumber: 11\n                    }, undefined),\n                    error.includes('MetaMask is not installed') && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                        href: \"https://metamask.io/download/\",\n                        target: \"_blank\",\n                        rel: \"noopener noreferrer\",\n                        className: \"text-indigo-600 hover:text-indigo-800 underline mt-1 block\",\n                        children: \"Install MetaMask\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Projects\\\\Dekhte hai\\\\neuroSync\\\\NeuroSync-AI-Frontend\\\\components\\\\blockchain\\\\WalletLoginButton.js\",\n                        lineNumber: 57,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Projects\\\\Dekhte hai\\\\neuroSync\\\\NeuroSync-AI-Frontend\\\\components\\\\blockchain\\\\WalletLoginButton.js\",\n                lineNumber: 53,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handleWalletLogin,\n                disabled: isLoading || isAuthenticating,\n                className: \"flex items-center justify-center space-x-2 w-full text-white bg-gradient-to-r from-orange-500 to-amber-500 hover:from-orange-600 hover:to-amber-600 rounded-lg px-5 py-3 font-medium transition-all\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        viewBox: \"0 0 512 512\",\n                        className: \"h-5 w-5\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M378.7 32H133.3C82.7 32 41 73.7 41 124.3V388c0 50.6 41.7 92.3 92.3 92.3h245.4c50.6 0 92.3-41.7 92.3-92.3V124.3c0-50.6-41.7-92.3-92.3-92.3zm52.3 356c0 28.8-23.5 52.3-52.3 52.3H133.3c-28.8 0-52.3-23.5-52.3-52.3V124.3c0-28.8 23.5-52.3 52.3-52.3h245.4c28.8 0 52.3 23.5 52.3 52.3V388zM336 170.6H176c-11 0-20 9-20 20v130.8c0 11 9 20 20 20h160c11 0 20-9 20-20V190.6c0-11-9-20-20-20zm-20 130.8H196V210.6h120v90.8z\",\n                            fill: \"currentColor\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Projects\\\\Dekhte hai\\\\neuroSync\\\\NeuroSync-AI-Frontend\\\\components\\\\blockchain\\\\WalletLoginButton.js\",\n                            lineNumber: 75,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Projects\\\\Dekhte hai\\\\neuroSync\\\\NeuroSync-AI-Frontend\\\\components\\\\blockchain\\\\WalletLoginButton.js\",\n                        lineNumber: 74,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: isLoading || isAuthenticating ? 'Connecting...' : 'Continue with MetaMask'\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Projects\\\\Dekhte hai\\\\neuroSync\\\\NeuroSync-AI-Frontend\\\\components\\\\blockchain\\\\WalletLoginButton.js\",\n                        lineNumber: 77,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Projects\\\\Dekhte hai\\\\neuroSync\\\\NeuroSync-AI-Frontend\\\\components\\\\blockchain\\\\WalletLoginButton.js\",\n                lineNumber: 69,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-center text-sm text-gray-600 mt-4\",\n                children: \"Privacy-focused login. Your wallet address becomes your decentralized identity.\"\n            }, void 0, false, {\n                fileName: \"D:\\\\Projects\\\\Dekhte hai\\\\neuroSync\\\\NeuroSync-AI-Frontend\\\\components\\\\blockchain\\\\WalletLoginButton.js\",\n                lineNumber: 80,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Projects\\\\Dekhte hai\\\\neuroSync\\\\NeuroSync-AI-Frontend\\\\components\\\\blockchain\\\\WalletLoginButton.js\",\n        lineNumber: 51,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WalletLoginButton);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvYmxvY2tjaGFpbi9XYWxsZXRMb2dpbkJ1dHRvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBd0M7QUFDQTtBQUNJO0FBRTVDOzs7O0NBSUMsR0FDRCxNQUFNSSxvQkFBb0I7SUFDeEIsTUFBTSxDQUFDQyxXQUFXQyxhQUFhLEdBQUdMLCtDQUFRQSxDQUFDO0lBQzNDLE1BQU0sQ0FBQ00sT0FBT0MsU0FBUyxHQUFHUCwrQ0FBUUEsQ0FBQztJQUNuQyxNQUFNUSxTQUFTUCxzREFBU0E7SUFFeEIsTUFBTSxFQUNKUSxhQUFhLEVBQ2JDLFlBQVksRUFDWkMsV0FBVyxFQUNYQyxnQkFBZ0IsRUFDakIsR0FBR1YsMERBQWFBO0lBRWpCLE1BQU1XLG9CQUFvQjtRQUN4QixJQUFJO1lBQ0ZSLGFBQWE7WUFDYkUsU0FBUztZQUVULHdDQUF3QztZQUN4QyxJQUFJLENBQUNJLGFBQWE7Z0JBQ2hCLE1BQU1GO1lBQ1I7WUFFQSxvQkFBb0I7WUFDcEIsTUFBTUssYUFBYSxNQUFNSjtZQUV6QixJQUFJSSxZQUFZO2dCQUNkLCtDQUErQztnQkFDL0NOLE9BQU9PLElBQUksQ0FBQztZQUNkLE9BQU87Z0JBQ0wsMkRBQTJEO2dCQUMzRFIsU0FBUztZQUNYO1FBQ0YsRUFBRSxPQUFPUyxLQUFLO1lBQ1pDLFFBQVFYLEtBQUssQ0FBQyx1QkFBdUJVO1lBQ3JDVCxTQUFTUyxJQUFJRSxPQUFPLElBQUk7UUFDMUIsU0FBVTtZQUNSYixhQUFhO1FBQ2Y7SUFDRjtJQUVBLHFCQUNFLDhEQUFDYztRQUFJQyxXQUFVOztZQUNaZCx1QkFDQyw4REFBQ2E7Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDQztrQ0FBR2Y7Ozs7OztvQkFFSEEsTUFBTWdCLFFBQVEsQ0FBQyw4Q0FDZCw4REFBQ0M7d0JBQ0NDLE1BQUs7d0JBQ0xDLFFBQU87d0JBQ1BDLEtBQUk7d0JBQ0pOLFdBQVU7a0NBQ1g7Ozs7Ozs7Ozs7OzswQkFPUCw4REFBQ087Z0JBQ0NDLFNBQVNmO2dCQUNUZ0IsVUFBVXpCLGFBQWFRO2dCQUN2QlEsV0FBVTs7a0NBRVYsOERBQUNVO3dCQUFJQyxPQUFNO3dCQUE2QkMsU0FBUTt3QkFBY1osV0FBVTtrQ0FDdEUsNEVBQUNhOzRCQUFLQyxHQUFFOzRCQUF3WkMsTUFBSzs7Ozs7Ozs7Ozs7a0NBRXZhLDhEQUFDQztrQ0FBTWhDLGFBQWFRLG1CQUFtQixrQkFBa0I7Ozs7Ozs7Ozs7OzswQkFHM0QsOERBQUNTO2dCQUFFRCxXQUFVOzBCQUF5Qzs7Ozs7Ozs7Ozs7O0FBSzVEO0FBRUEsaUVBQWVqQixpQkFBaUJBLEVBQUMiLCJzb3VyY2VzIjpbIkQ6XFxQcm9qZWN0c1xcRGVraHRlIGhhaVxcbmV1cm9TeW5jXFxOZXVyb1N5bmMtQUktRnJvbnRlbmRcXGNvbXBvbmVudHNcXGJsb2NrY2hhaW5cXFdhbGxldExvZ2luQnV0dG9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xyXG5pbXBvcnQgdXNlV2FsbGV0QXV0aCBmcm9tICcuL3VzZVdhbGxldEF1dGgnO1xyXG5cclxuLyoqXHJcbiAqIE1ldGFNYXNrIGxvZ2luIGJ1dHRvbiBjb21wb25lbnRcclxuICogU2hvd3MgYSB2aXN1YWxseSBhcHBlYWxpbmcgYnV0dG9uIHRvIGNvbm5lY3Qgd2l0aCBNZXRhTWFza1xyXG4gKiBhbmQgaGFuZGxlcyBhdXRoZW50aWNhdGlvbiBmbG93XHJcbiAqL1xyXG5jb25zdCBXYWxsZXRMb2dpbkJ1dHRvbiA9ICgpID0+IHtcclxuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGUobnVsbCk7XHJcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XHJcbiAgXHJcbiAgY29uc3QgeyBcclxuICAgIGNvbm5lY3RXYWxsZXQsIFxyXG4gICAgYXV0aGVudGljYXRlLCBcclxuICAgIGlzQ29ubmVjdGVkLFxyXG4gICAgaXNBdXRoZW50aWNhdGluZ1xyXG4gIH0gPSB1c2VXYWxsZXRBdXRoKCk7XHJcbiAgXHJcbiAgY29uc3QgaGFuZGxlV2FsbGV0TG9naW4gPSBhc3luYyAoKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XHJcbiAgICAgIHNldEVycm9yKG51bGwpO1xyXG4gICAgICBcclxuICAgICAgLy8gRmlyc3QgY29ubmVjdCB3YWxsZXQgaWYgbm90IGNvbm5lY3RlZFxyXG4gICAgICBpZiAoIWlzQ29ubmVjdGVkKSB7XHJcbiAgICAgICAgYXdhaXQgY29ubmVjdFdhbGxldCgpO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAvLyBUaGVuIGF1dGhlbnRpY2F0ZVxyXG4gICAgICBjb25zdCBhdXRoUmVzdWx0ID0gYXdhaXQgYXV0aGVudGljYXRlKCk7XHJcbiAgICAgIFxyXG4gICAgICBpZiAoYXV0aFJlc3VsdCkge1xyXG4gICAgICAgIC8vIFJlZGlyZWN0IHRvIGRhc2hib2FyZCBhZnRlciBzdWNjZXNzZnVsIGxvZ2luXHJcbiAgICAgICAgcm91dGVyLnB1c2goJy9kYXNoYm9hcmQnKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBJZiBhdXRoZW50aWNhdGlvbiByZXR1cm5lZCBudWxsLCBidXQgbm8gZXJyb3Igd2FzIHRocm93blxyXG4gICAgICAgIHNldEVycm9yKCdBdXRoZW50aWNhdGlvbiBmYWlsZWQuIFBsZWFzZSB0cnkgYWdhaW4uJyk7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdXYWxsZXQgbG9naW4gZXJyb3I6JywgZXJyKTtcclxuICAgICAgc2V0RXJyb3IoZXJyLm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byBsb2dpbiB3aXRoIHdhbGxldCcpO1xyXG4gICAgfSBmaW5hbGx5IHtcclxuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcclxuICAgIH1cclxuICB9O1xyXG4gIFxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInctZnVsbFwiPlxyXG4gICAgICB7ZXJyb3IgJiYgKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWItNCB0ZXh0LXNtIHRleHQtcmVkLTYwMCBiZy1yZWQtNTAgcC0zIHJvdW5kZWRcIj5cclxuICAgICAgICAgIDxwPntlcnJvcn08L3A+XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHtlcnJvci5pbmNsdWRlcygnTWV0YU1hc2sgaXMgbm90IGluc3RhbGxlZCcpICYmIChcclxuICAgICAgICAgICAgPGEgXHJcbiAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vbWV0YW1hc2suaW8vZG93bmxvYWQvXCIgXHJcbiAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCIgXHJcbiAgICAgICAgICAgICAgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC1pbmRpZ28tNjAwIGhvdmVyOnRleHQtaW5kaWdvLTgwMCB1bmRlcmxpbmUgbXQtMSBibG9ja1wiXHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICBJbnN0YWxsIE1ldGFNYXNrXHJcbiAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICl9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICAgIFxyXG4gICAgICA8YnV0dG9uXHJcbiAgICAgICAgb25DbGljaz17aGFuZGxlV2FsbGV0TG9naW59XHJcbiAgICAgICAgZGlzYWJsZWQ9e2lzTG9hZGluZyB8fCBpc0F1dGhlbnRpY2F0aW5nfVxyXG4gICAgICAgIGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHNwYWNlLXgtMiB3LWZ1bGwgdGV4dC13aGl0ZSBiZy1ncmFkaWVudC10by1yIGZyb20tb3JhbmdlLTUwMCB0by1hbWJlci01MDAgaG92ZXI6ZnJvbS1vcmFuZ2UtNjAwIGhvdmVyOnRvLWFtYmVyLTYwMCByb3VuZGVkLWxnIHB4LTUgcHktMyBmb250LW1lZGl1bSB0cmFuc2l0aW9uLWFsbFwiXHJcbiAgICAgID5cclxuICAgICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiBjbGFzc05hbWU9XCJoLTUgdy01XCI+XHJcbiAgICAgICAgICA8cGF0aCBkPVwiTTM3OC43IDMySDEzMy4zQzgyLjcgMzIgNDEgNzMuNyA0MSAxMjQuM1YzODhjMCA1MC42IDQxLjcgOTIuMyA5Mi4zIDkyLjNoMjQ1LjRjNTAuNiAwIDkyLjMtNDEuNyA5Mi4zLTkyLjNWMTI0LjNjMC01MC42LTQxLjctOTIuMy05Mi4zLTkyLjN6bTUyLjMgMzU2YzAgMjguOC0yMy41IDUyLjMtNTIuMyA1Mi4zSDEzMy4zYy0yOC44IDAtNTIuMy0yMy41LTUyLjMtNTIuM1YxMjQuM2MwLTI4LjggMjMuNS01Mi4zIDUyLjMtNTIuM2gyNDUuNGMyOC44IDAgNTIuMyAyMy41IDUyLjMgNTIuM1YzODh6TTMzNiAxNzAuNkgxNzZjLTExIDAtMjAgOS0yMCAyMHYxMzAuOGMwIDExIDkgMjAgMjAgMjBoMTYwYzExIDAgMjAtOSAyMC0yMFYxOTAuNmMwLTExLTktMjAtMjAtMjB6bS0yMCAxMzAuOEgxOTZWMjEwLjZoMTIwdjkwLjh6XCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIC8+XHJcbiAgICAgICAgPC9zdmc+XHJcbiAgICAgICAgPHNwYW4+e2lzTG9hZGluZyB8fCBpc0F1dGhlbnRpY2F0aW5nID8gJ0Nvbm5lY3RpbmcuLi4nIDogJ0NvbnRpbnVlIHdpdGggTWV0YU1hc2snfTwvc3Bhbj5cclxuICAgICAgPC9idXR0b24+XHJcbiAgICAgIFxyXG4gICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciB0ZXh0LXNtIHRleHQtZ3JheS02MDAgbXQtNFwiPlxyXG4gICAgICAgIFByaXZhY3ktZm9jdXNlZCBsb2dpbi4gWW91ciB3YWxsZXQgYWRkcmVzcyBiZWNvbWVzIHlvdXIgZGVjZW50cmFsaXplZCBpZGVudGl0eS5cclxuICAgICAgPC9wPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFdhbGxldExvZ2luQnV0dG9uOyAiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZVJvdXRlciIsInVzZVdhbGxldEF1dGgiLCJXYWxsZXRMb2dpbkJ1dHRvbiIsImlzTG9hZGluZyIsInNldElzTG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJyb3V0ZXIiLCJjb25uZWN0V2FsbGV0IiwiYXV0aGVudGljYXRlIiwiaXNDb25uZWN0ZWQiLCJpc0F1dGhlbnRpY2F0aW5nIiwiaGFuZGxlV2FsbGV0TG9naW4iLCJhdXRoUmVzdWx0IiwicHVzaCIsImVyciIsImNvbnNvbGUiLCJtZXNzYWdlIiwiZGl2IiwiY2xhc3NOYW1lIiwicCIsImluY2x1ZGVzIiwiYSIsImhyZWYiLCJ0YXJnZXQiLCJyZWwiLCJidXR0b24iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJzdmciLCJ4bWxucyIsInZpZXdCb3giLCJwYXRoIiwiZCIsImZpbGwiLCJzcGFuIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/blockchain/WalletLoginButton.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/blockchain/useWalletAuth.js":
/*!************************************************!*\
  !*** ./components/blockchain/useWalletAuth.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\r\n * Custom hook for wallet-based authentication\r\n * Handles connecting to MetaMask, signing messages, and session management\r\n */ const useWalletAuth = ()=>{\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isAuthenticating, setIsAuthenticating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [walletAddress, setWalletAddress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [chainId, setChainId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [provider, setProvider] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [userData, setUserData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Check if user has already connected their wallet\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useWalletAuth.useEffect\": ()=>{\n            const checkConnection = {\n                \"useWalletAuth.useEffect.checkConnection\": async ()=>{\n                    // Check if browser has ethereum object\n                    if (typeof window.ethereum !== 'undefined') {\n                        try {\n                            // Setup ethers provider\n                            const ethersProvider = new ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.providers.Web3Provider(window.ethereum);\n                            setProvider(ethersProvider);\n                            // Check if already connected\n                            const accounts = await ethersProvider.listAccounts();\n                            if (accounts.length > 0) {\n                                const network = await ethersProvider.getNetwork();\n                                setWalletAddress(accounts[0]);\n                                setChainId(network.chainId);\n                                setIsConnected(true);\n                                // Check if we have stored session data\n                                const storedUser = localStorage.getItem('wallet_user_data');\n                                if (storedUser) {\n                                    setUserData(JSON.parse(storedUser));\n                                }\n                            }\n                        } catch (err) {\n                            console.error('Error checking wallet connection:', err);\n                            setError('Failed to connect to wallet');\n                        }\n                    }\n                }\n            }[\"useWalletAuth.useEffect.checkConnection\"];\n            checkConnection();\n        }\n    }[\"useWalletAuth.useEffect\"], []);\n    // Handle account changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useWalletAuth.useEffect\": ()=>{\n            if (typeof window.ethereum !== 'undefined') {\n                const handleAccountsChanged = {\n                    \"useWalletAuth.useEffect.handleAccountsChanged\": (accounts)=>{\n                        if (accounts.length === 0) {\n                            // User disconnected\n                            setIsConnected(false);\n                            setWalletAddress(null);\n                            localStorage.removeItem('wallet_user_data');\n                            setUserData(null);\n                        } else if (accounts[0] !== walletAddress) {\n                            // Account changed\n                            setWalletAddress(accounts[0]);\n                            localStorage.removeItem('wallet_user_data');\n                            setUserData(null);\n                        }\n                    }\n                }[\"useWalletAuth.useEffect.handleAccountsChanged\"];\n                const handleChainChanged = {\n                    \"useWalletAuth.useEffect.handleChainChanged\": (chainIdHex)=>{\n                        const newChainId = parseInt(chainIdHex, 16);\n                        setChainId(newChainId);\n                    }\n                }[\"useWalletAuth.useEffect.handleChainChanged\"];\n                // Subscribe to events\n                window.ethereum.on('accountsChanged', handleAccountsChanged);\n                window.ethereum.on('chainChanged', handleChainChanged);\n                // Cleanup\n                return ({\n                    \"useWalletAuth.useEffect\": ()=>{\n                        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n                        window.ethereum.removeListener('chainChanged', handleChainChanged);\n                    }\n                })[\"useWalletAuth.useEffect\"];\n            }\n        }\n    }[\"useWalletAuth.useEffect\"], [\n        walletAddress\n    ]);\n    /**\r\n   * Connect to MetaMask wallet\r\n   */ const connectWallet = async ()=>{\n        setError(null);\n        if (typeof window.ethereum === 'undefined') {\n            setError('MetaMask is not installed. Please install MetaMask to use this feature.');\n            return;\n        }\n        try {\n            setIsAuthenticating(true);\n            // Request account access\n            const ethersProvider = new ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.providers.Web3Provider(window.ethereum);\n            const accounts = await ethersProvider.send('eth_requestAccounts', []);\n            if (accounts.length === 0) {\n                throw new Error('No accounts found. Please unlock MetaMask and try again.');\n            }\n            const network = await ethersProvider.getNetwork();\n            setProvider(ethersProvider);\n            setWalletAddress(accounts[0]);\n            setChainId(network.chainId);\n            setIsConnected(true);\n        } catch (err) {\n            console.error('Error connecting wallet:', err);\n            setError(err.message || 'Failed to connect wallet');\n        } finally{\n            setIsAuthenticating(false);\n        }\n    };\n    /**\r\n   * Sign a message to verify wallet ownership\r\n   */ const authenticate = async ()=>{\n        if (!isConnected || !provider || !walletAddress) {\n            await connectWallet();\n        }\n        if (!provider || !walletAddress) {\n            setError('Wallet connection failed');\n            return null;\n        }\n        try {\n            setIsAuthenticating(true);\n            // Generate a nonce for security\n            const nonce = Math.floor(Math.random() * 1000000).toString();\n            // Create a message to sign\n            const message = `Sign this message to authenticate with NeuroSync: ${nonce}`;\n            // Request signature from user\n            const signer = provider.getSigner();\n            let signature;\n            try {\n                signature = await signer.signMessage(message);\n            } catch (signError) {\n                console.error('Error signing message:', signError);\n                throw new Error('User rejected signature request');\n            }\n            // Ensure we have all required parameters\n            if (!walletAddress || !signature || !message) {\n                throw new Error('Wallet address, signature, and message are required');\n            }\n            // Verify on the server\n            const response = await fetch('/api/blockchain/authenticate', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    walletAddress,\n                    message,\n                    signature\n                })\n            });\n            const data = await response.json();\n            if (!data.success) {\n                throw new Error(data.error || 'Authentication failed');\n            }\n            // Save user data\n            setUserData(data);\n            localStorage.setItem('wallet_user_data', JSON.stringify(data));\n            return data;\n        } catch (err) {\n            console.error('Authentication error:', err);\n            setError(err.message || 'Failed to authenticate');\n            return null;\n        } finally{\n            setIsAuthenticating(false);\n        }\n    };\n    /**\r\n   * Disconnect wallet\r\n   */ const disconnectWallet = ()=>{\n        setIsConnected(false);\n        setWalletAddress(null);\n        setChainId(null);\n        setUserData(null);\n        localStorage.removeItem('wallet_user_data');\n    };\n    /**\r\n   * Check if connected to the right network\r\n   * @param {number} expectedChainId - The expected chain ID\r\n   * @returns {boolean} - Whether connected to the right network\r\n   */ const isCorrectNetwork = (expectedChainId)=>{\n        return chainId === expectedChainId;\n    };\n    /**\r\n   * Switch network\r\n   * @param {number} targetChainId - The chain ID to switch to\r\n   */ const switchNetwork = async (targetChainId)=>{\n        if (!provider) {\n            await connectWallet();\n        }\n        try {\n            await window.ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [\n                    {\n                        chainId: `0x${targetChainId.toString(16)}`\n                    }\n                ]\n            });\n        // Network will update via event listener\n        } catch (err) {\n            console.error('Error switching network:', err);\n            setError(err.message || 'Failed to switch network');\n        }\n    };\n    return {\n        isConnected,\n        isAuthenticating,\n        error,\n        walletAddress,\n        chainId,\n        provider,\n        userData,\n        connectWallet,\n        authenticate,\n        disconnectWallet,\n        isCorrectNetwork,\n        switchNetwork\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useWalletAuth);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/blockchain/useWalletAuth.js\n");

/***/ })

};
;