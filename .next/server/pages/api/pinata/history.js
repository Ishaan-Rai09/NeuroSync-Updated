"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/pinata/history";
exports.ids = ["pages/api/pinata/history"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpinata%2Fhistory&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cpinata%5Chistory.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpinata%2Fhistory&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cpinata%5Chistory.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_pinata_history_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\pinata\\history.js */ \"(api-node)/./pages/api/pinata/history.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_pinata_history_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_pinata_history_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_pinata_history_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_pinata_history_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/pinata/history\",\n        pathname: \"/api/pinata/history\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_pinata_history_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGcGluYXRhJTJGaGlzdG9yeSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDcGluYXRhJTVDaGlzdG9yeS5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDRTtBQUMxRDtBQUM2RDtBQUM3RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMseURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHlEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLHlHQUFtQjtBQUNsRDtBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXHBpbmF0YVxcXFxoaXN0b3J5LmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9waW5hdGEvaGlzdG9yeVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3BpbmF0YS9oaXN0b3J5XCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpinata%2Fhistory&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cpinata%5Chistory.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/pinata/history.js":
/*!*************************************!*\
  !*** ./pages/api/pinata/history.js ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Pinata configuration\nconst JWT = process.env.PINATA_JWT;\nconst PINATA_API_KEY = process.env.PINATA_API_KEY;\nconst PINATA_API_SECRET = process.env.PINATA_API_SECRET;\n/**\r\n * @route GET /api/pinata/history\r\n * @desc Get transaction history for a wallet from Pinata IPFS\r\n * @access Private\r\n */ async function handler(req, res) {\n    if (req.method !== 'GET') {\n        return res.status(405).json({\n            success: false,\n            error: 'Method not allowed'\n        });\n    }\n    try {\n        const { walletAddress } = req.query;\n        if (!walletAddress) {\n            return res.status(400).json({\n                success: false,\n                error: 'Wallet address is required'\n            });\n        }\n        console.log('Fetching transaction history for wallet:', walletAddress);\n        // Validate API credentials\n        if (!JWT && (!PINATA_API_KEY || !PINATA_API_SECRET)) {\n            console.error('Pinata API credentials not configured in environment variables');\n            return res.status(500).json({\n                success: false,\n                error: 'Pinata API credentials not configured'\n            });\n        }\n        // In a production app, you would use a database to store the latest IPFS hash\n        // for each user's transaction history. For this demo, we're using global variables\n        // or falling back to mock data.\n        // Check for transactions in our global temporary storage\n        let transactions = [];\n        try {\n            // First check if we have stored an IPFS hash for this user's history\n            const ipfsHash = global.userHistoryCids?.[walletAddress];\n            if (ipfsHash) {\n                console.log(`Found history IPFS hash for ${walletAddress}: ${ipfsHash}`);\n                // Try to retrieve the content from Pinata\n                const gatewayUrl = `https://gateway.pinata.cloud/ipfs/${ipfsHash}`;\n                try {\n                    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(gatewayUrl);\n                    if (response.data && response.data.transactions) {\n                        transactions = response.data.transactions;\n                        console.log(`Retrieved ${transactions.length} transactions from Pinata`);\n                    }\n                } catch (error) {\n                    console.error('Error fetching from Pinata gateway:', error);\n                    // If we can't retrieve from Pinata, try our in-memory backup\n                    if (global.userTransactions?.[walletAddress]) {\n                        transactions = global.userTransactions[walletAddress];\n                        console.log(`Retrieved ${transactions.length} transactions from memory`);\n                    }\n                }\n            } else {\n                console.log('No history IPFS hash found, checking if we have transactions in memory');\n                // Try to load from global temporary storage\n                if (global.userTransactions?.[walletAddress]) {\n                    transactions = global.userTransactions[walletAddress];\n                    console.log(`Retrieved ${transactions.length} transactions from memory`);\n                } else {\n                    // If we don't have anything, provide sample data for new users\n                    console.log('No transactions found, providing initial data for new user');\n                    // For new users, we want to show an initial transaction of 100 NEURO tokens\n                    transactions = [\n                        {\n                            id: `initial-${walletAddress}`,\n                            type: 'INITIAL',\n                            amount: '100',\n                            description: 'Welcome Bonus',\n                            timestamp: new Date().toISOString()\n                        }\n                    ];\n                    // Store this initial transaction\n                    if (!global.userTransactions) {\n                        global.userTransactions = {};\n                    }\n                    global.userTransactions[walletAddress] = transactions;\n                    // Store on Pinata too (fire and forget)\n                    try {\n                        const initialData = {\n                            walletAddress,\n                            type: 'INITIAL',\n                            amount: '100',\n                            description: 'Welcome Bonus',\n                            timestamp: new Date().toISOString()\n                        };\n                        // Store through our own API endpoint\n                        fetch('/api/pinata/store', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify(initialData)\n                        }).catch((e)=>console.error('Failed to record initial balance:', e));\n                    } catch (err) {\n                        console.error('Failed to store initial balance on Pinata:', err);\n                    }\n                }\n            }\n        } catch (error) {\n            console.error('Error retrieving history:', error);\n            // If we fail to retrieve history, use an empty array\n            transactions = [];\n        }\n        return res.status(200).json({\n            success: true,\n            walletAddress,\n            transactions,\n            debug: {\n                hasIpfsHash: !!global.userHistoryCids?.[walletAddress],\n                hasTransactions: !!global.userTransactions?.[walletAddress],\n                transactionCount: transactions.length\n            }\n        });\n    } catch (error) {\n        console.error('Pinata retrieval error:', error);\n        return res.status(500).json({\n            success: false,\n            error: `Failed to retrieve transaction history: ${error.message}`,\n            stack:  true ? error.stack : 0\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/pinata/history.js\n");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpinata%2Fhistory&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cpinata%5Chistory.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();