"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/conversations";
exports.ids = ["pages/api/conversations"];
exports.modules = {

/***/ "(api-node)/./lib/models/conversation.js":
/*!************************************!*\
  !*** ./lib/models/conversation.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conversationSchema: () => (/* binding */ conversationSchema)\n/* harmony export */ });\n/**\r\n * MongoDB schema for conversations\r\n * Stores chat history between users and the AI assistant\r\n */ /**\r\n * Message structure:\r\n * - sender: 'user' | 'ai'\r\n * - content: string\r\n * - timestamp: Date\r\n * - sentiment: string (optional)\r\n * - emotions: object (optional)\r\n */ /**\r\n * Conversation Schema:\r\n * - userId: ObjectId (reference to users collection)\r\n * - title: string (auto-generated from first message or user-defined)\r\n * - messages: Array of message objects\r\n * - createdAt: Date\r\n * - updatedAt: Date\r\n * - lastSentiment: string (most recent analyzed sentiment)\r\n * - lastEmotions: object (most recent analyzed emotions)\r\n * - recommendations: Array of recommendation objects (most recent)\r\n */ // This file provides schema definition for conversations\n// to be used in MongoDB collections\n// Export schema for use in API routes\nconst conversationSchema = {\n    userId: '',\n    title: '',\n    messages: [],\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    lastSentiment: '',\n    lastEmotions: {\n        primary: '',\n        confidence: 0\n    },\n    recommendations: []\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9tb2RlbHMvY29udmVyc2F0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0NBR0MsR0FFRDs7Ozs7OztDQU9DLEdBRUQ7Ozs7Ozs7Ozs7Q0FVQyxHQUVELHlEQUF5RDtBQUN6RCxvQ0FBb0M7QUFFcEMsc0NBQXNDO0FBQy9CLE1BQU1BLHFCQUFxQjtJQUNoQ0MsUUFBUTtJQUNSQyxPQUFPO0lBQ1BDLFVBQVUsRUFRVDtJQUNEQyxXQUFXLElBQUlDO0lBQ2ZDLFdBQVcsSUFBSUQ7SUFDZkUsZUFBZTtJQUNmQyxjQUFjO1FBQ1pDLFNBQVM7UUFDVEMsWUFBWTtJQUNkO0lBQ0FDLGlCQUFpQixFQUFFO0FBQ3JCLEVBQUUiLCJzb3VyY2VzIjpbIkQ6XFxQcm9qZWN0c1xcRGVraHRlIGhhaVxcbmV1cm9TeW5jXFxOZXVyb1N5bmMtQUktRnJvbnRlbmRcXGxpYlxcbW9kZWxzXFxjb252ZXJzYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vbmdvREIgc2NoZW1hIGZvciBjb252ZXJzYXRpb25zXHJcbiAqIFN0b3JlcyBjaGF0IGhpc3RvcnkgYmV0d2VlbiB1c2VycyBhbmQgdGhlIEFJIGFzc2lzdGFudFxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNZXNzYWdlIHN0cnVjdHVyZTpcclxuICogLSBzZW5kZXI6ICd1c2VyJyB8ICdhaSdcclxuICogLSBjb250ZW50OiBzdHJpbmdcclxuICogLSB0aW1lc3RhbXA6IERhdGVcclxuICogLSBzZW50aW1lbnQ6IHN0cmluZyAob3B0aW9uYWwpXHJcbiAqIC0gZW1vdGlvbnM6IG9iamVjdCAob3B0aW9uYWwpXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIENvbnZlcnNhdGlvbiBTY2hlbWE6XHJcbiAqIC0gdXNlcklkOiBPYmplY3RJZCAocmVmZXJlbmNlIHRvIHVzZXJzIGNvbGxlY3Rpb24pXHJcbiAqIC0gdGl0bGU6IHN0cmluZyAoYXV0by1nZW5lcmF0ZWQgZnJvbSBmaXJzdCBtZXNzYWdlIG9yIHVzZXItZGVmaW5lZClcclxuICogLSBtZXNzYWdlczogQXJyYXkgb2YgbWVzc2FnZSBvYmplY3RzXHJcbiAqIC0gY3JlYXRlZEF0OiBEYXRlXHJcbiAqIC0gdXBkYXRlZEF0OiBEYXRlXHJcbiAqIC0gbGFzdFNlbnRpbWVudDogc3RyaW5nIChtb3N0IHJlY2VudCBhbmFseXplZCBzZW50aW1lbnQpXHJcbiAqIC0gbGFzdEVtb3Rpb25zOiBvYmplY3QgKG1vc3QgcmVjZW50IGFuYWx5emVkIGVtb3Rpb25zKVxyXG4gKiAtIHJlY29tbWVuZGF0aW9uczogQXJyYXkgb2YgcmVjb21tZW5kYXRpb24gb2JqZWN0cyAobW9zdCByZWNlbnQpXHJcbiAqL1xyXG5cclxuLy8gVGhpcyBmaWxlIHByb3ZpZGVzIHNjaGVtYSBkZWZpbml0aW9uIGZvciBjb252ZXJzYXRpb25zXHJcbi8vIHRvIGJlIHVzZWQgaW4gTW9uZ29EQiBjb2xsZWN0aW9uc1xyXG5cclxuLy8gRXhwb3J0IHNjaGVtYSBmb3IgdXNlIGluIEFQSSByb3V0ZXNcclxuZXhwb3J0IGNvbnN0IGNvbnZlcnNhdGlvblNjaGVtYSA9IHtcclxuICB1c2VySWQ6ICcnLCAvLyBXaWxsIGJlIHBvcHVsYXRlZCB3aXRoIE1vbmdvREIgT2JqZWN0SWRcclxuICB0aXRsZTogJycsXHJcbiAgbWVzc2FnZXM6IFtcclxuICAgIC8vIHtcclxuICAgIC8vICAgc2VuZGVyOiAndXNlcicgfCAnYWknLFxyXG4gICAgLy8gICBjb250ZW50OiAnJyxcclxuICAgIC8vICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxyXG4gICAgLy8gICBzZW50aW1lbnQ6ICcnLCAvLyBPcHRpb25hbFxyXG4gICAgLy8gICBlbW90aW9uczoge30sIC8vIE9wdGlvbmFsXHJcbiAgICAvLyB9XHJcbiAgXSxcclxuICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCksXHJcbiAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLFxyXG4gIGxhc3RTZW50aW1lbnQ6ICcnLFxyXG4gIGxhc3RFbW90aW9uczoge1xyXG4gICAgcHJpbWFyeTogJycsXHJcbiAgICBjb25maWRlbmNlOiAwXHJcbiAgfSxcclxuICByZWNvbW1lbmRhdGlvbnM6IFtdXHJcbn07ICJdLCJuYW1lcyI6WyJjb252ZXJzYXRpb25TY2hlbWEiLCJ1c2VySWQiLCJ0aXRsZSIsIm1lc3NhZ2VzIiwiY3JlYXRlZEF0IiwiRGF0ZSIsInVwZGF0ZWRBdCIsImxhc3RTZW50aW1lbnQiLCJsYXN0RW1vdGlvbnMiLCJwcmltYXJ5IiwiY29uZmlkZW5jZSIsInJlY29tbWVuZGF0aW9ucyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./lib/models/conversation.js\n");

/***/ }),

/***/ "(api-node)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToDatabase: () => (/* binding */ connectToDatabase),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\nconst uri = process.env.MONGODB_URI || 'mongodb://localhost:27017/neurosync';\nconst options = {\n    useUnifiedTopology: true,\n    useNewUrlParser: true\n};\nlet client;\nlet clientPromise;\nif (!process.env.MONGODB_URI) {\n    throw new Error('Please add your MongoDB URI to .env.local');\n}\nif (true) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    if (!global._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options);\n        global._mongoClientPromise = client.connect();\n    }\n    clientPromise = global._mongoClientPromise;\n} else {}\nasync function connectToDatabase() {\n    console.log('Connecting to MongoDB...');\n    const client = await clientPromise;\n    const db = client.db();\n    console.log('Connected to MongoDB successfully');\n    return {\n        client,\n        db\n    };\n}\n// Export a module-scoped MongoClient promise\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9tb25nb2RiLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0M7QUFFdEMsTUFBTUMsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxXQUFXLElBQUk7QUFDdkMsTUFBTUMsVUFBVTtJQUNkQyxvQkFBb0I7SUFDcEJDLGlCQUFpQjtBQUNuQjtBQUVBLElBQUlDO0FBQ0osSUFBSUM7QUFFSixJQUFJLENBQUNQLFFBQVFDLEdBQUcsQ0FBQ0MsV0FBVyxFQUFFO0lBQzVCLE1BQU0sSUFBSU0sTUFBTTtBQUNsQjtBQUVBLElBQUlSLElBQXNDLEVBQUU7SUFDMUMsK0RBQStEO0lBQy9ELDZFQUE2RTtJQUM3RSxJQUFJLENBQUNTLE9BQU9DLG1CQUFtQixFQUFFO1FBQy9CSixTQUFTLElBQUlSLGdEQUFXQSxDQUFDQyxLQUFLSTtRQUM5Qk0sT0FBT0MsbUJBQW1CLEdBQUdKLE9BQU9LLE9BQU87SUFDN0M7SUFDQUosZ0JBQWdCRSxPQUFPQyxtQkFBbUI7QUFDNUMsT0FBTyxFQUlOO0FBRU0sZUFBZUU7SUFDcEJDLFFBQVFDLEdBQUcsQ0FBQztJQUNaLE1BQU1SLFNBQVMsTUFBTUM7SUFDckIsTUFBTVEsS0FBS1QsT0FBT1MsRUFBRTtJQUNwQkYsUUFBUUMsR0FBRyxDQUFDO0lBQ1osT0FBTztRQUFFUjtRQUFRUztJQUFHO0FBQ3RCO0FBRUEsNkNBQTZDO0FBQzdDLGlFQUFlUixhQUFhQSxFQUFDIiwic291cmNlcyI6WyJEOlxcUHJvamVjdHNcXERla2h0ZSBoYWlcXG5ldXJvU3luY1xcTmV1cm9TeW5jLUFJLUZyb250ZW5kXFxsaWJcXG1vbmdvZGIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tICdtb25nb2RiJztcclxuXHJcbmNvbnN0IHVyaSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJIHx8ICdtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L25ldXJvc3luYyc7XHJcbmNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxyXG4gIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcclxufTtcclxuXHJcbmxldCBjbGllbnQ7XHJcbmxldCBjbGllbnRQcm9taXNlO1xyXG5cclxuaWYgKCFwcm9jZXNzLmVudi5NT05HT0RCX1VSSSkge1xyXG4gIHRocm93IG5ldyBFcnJvcignUGxlYXNlIGFkZCB5b3VyIE1vbmdvREIgVVJJIHRvIC5lbnYubG9jYWwnKTtcclxufVxyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XHJcbiAgLy8gSW4gZGV2ZWxvcG1lbnQgbW9kZSwgdXNlIGEgZ2xvYmFsIHZhcmlhYmxlIHNvIHRoYXQgdGhlIHZhbHVlXHJcbiAgLy8gaXMgcHJlc2VydmVkIGFjcm9zcyBtb2R1bGUgcmVsb2FkcyBjYXVzZWQgYnkgSE1SIChIb3QgTW9kdWxlIFJlcGxhY2VtZW50KS5cclxuICBpZiAoIWdsb2JhbC5fbW9uZ29DbGllbnRQcm9taXNlKSB7XHJcbiAgICBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQodXJpLCBvcHRpb25zKTtcclxuICAgIGdsb2JhbC5fbW9uZ29DbGllbnRQcm9taXNlID0gY2xpZW50LmNvbm5lY3QoKTtcclxuICB9XHJcbiAgY2xpZW50UHJvbWlzZSA9IGdsb2JhbC5fbW9uZ29DbGllbnRQcm9taXNlO1xyXG59IGVsc2Uge1xyXG4gIC8vIEluIHByb2R1Y3Rpb24gbW9kZSwgaXQncyBiZXN0IHRvIG5vdCB1c2UgYSBnbG9iYWwgdmFyaWFibGUuXHJcbiAgY2xpZW50ID0gbmV3IE1vbmdvQ2xpZW50KHVyaSwgb3B0aW9ucyk7XHJcbiAgY2xpZW50UHJvbWlzZSA9IGNsaWVudC5jb25uZWN0KCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb25uZWN0VG9EYXRhYmFzZSgpIHtcclxuICBjb25zb2xlLmxvZygnQ29ubmVjdGluZyB0byBNb25nb0RCLi4uJyk7XHJcbiAgY29uc3QgY2xpZW50ID0gYXdhaXQgY2xpZW50UHJvbWlzZTtcclxuICBjb25zdCBkYiA9IGNsaWVudC5kYigpO1xyXG4gIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gTW9uZ29EQiBzdWNjZXNzZnVsbHknKTtcclxuICByZXR1cm4geyBjbGllbnQsIGRiIH07XHJcbn1cclxuXHJcbi8vIEV4cG9ydCBhIG1vZHVsZS1zY29wZWQgTW9uZ29DbGllbnQgcHJvbWlzZVxyXG5leHBvcnQgZGVmYXVsdCBjbGllbnRQcm9taXNlOyAiXSwibmFtZXMiOlsiTW9uZ29DbGllbnQiLCJ1cmkiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJvcHRpb25zIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidXNlTmV3VXJsUGFyc2VyIiwiY2xpZW50IiwiY2xpZW50UHJvbWlzZSIsIkVycm9yIiwiZ2xvYmFsIiwiX21vbmdvQ2xpZW50UHJvbWlzZSIsImNvbm5lY3QiLCJjb25uZWN0VG9EYXRhYmFzZSIsImNvbnNvbGUiLCJsb2ciLCJkYiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./lib/mongodb.js\n");

/***/ }),

/***/ "(api-node)/./lib/services/conversation-service.js":
/*!**********************************************!*\
  !*** ./lib/services/conversation-service.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conversationService: () => (/* binding */ conversationService)\n/* harmony export */ });\n/* harmony import */ var _mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mongodb */ \"(api-node)/./lib/mongodb.js\");\n/* harmony import */ var _models_conversation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/conversation */ \"(api-node)/./lib/models/conversation.js\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n/**\r\n * Service for managing conversations in MongoDB\r\n */ const conversationService = {\n    /**\r\n   * Create a new conversation\r\n   * @param {string} userId - User ID\r\n   * @param {string} message - Initial message content\r\n   * @param {Object} analysis - Optional sentiment analysis\r\n   * @returns {Promise<Object>} - Created conversation\r\n   */ createConversation: async (userId, message, analysis = null)=>{\n        const { db } = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_0__.connectToDatabase)();\n        // Validate userId\n        if (!userId || typeof userId !== 'string' || userId === 'undefined') {\n            console.error('Invalid userId provided to createConversation:', userId);\n            throw new Error('Invalid user ID');\n        }\n        try {\n            const newConversation = {\n                ..._models_conversation__WEBPACK_IMPORTED_MODULE_1__.conversationSchema,\n                userId: new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(userId),\n                title: `Conversation ${new Date().toLocaleString()}`,\n                messages: [\n                    {\n                        sender: 'user',\n                        content: message,\n                        timestamp: new Date(),\n                        analysis: analysis || null\n                    }\n                ],\n                createdAt: new Date(),\n                updatedAt: new Date()\n            };\n            const result = await db.collection('conversations').insertOne(newConversation);\n            return {\n                ...newConversation,\n                _id: result.insertedId\n            };\n        } catch (error) {\n            console.error('Error in createConversation:', error);\n            throw error;\n        }\n    },\n    /**\r\n   * Add a message to an existing conversation\r\n   * @param {string} conversationId - Conversation ID\r\n   * @param {Object} message - Message object\r\n   * @param {Object} analysis - Sentiment analysis results\r\n   * @returns {Promise<Object>} - Updated conversation\r\n   */ addMessage: async (conversationId, message, analysis = null)=>{\n        const { db } = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_0__.connectToDatabase)();\n        if (!conversationId) {\n            console.error('Invalid conversationId provided to addMessage');\n            throw new Error('Invalid conversation ID');\n        }\n        try {\n            const updateData = {\n                $push: {\n                    messages: message\n                },\n                $set: {\n                    updatedAt: new Date()\n                }\n            };\n            // Add sentiment analysis if available\n            if (analysis) {\n                updateData.$set.lastSentiment = analysis.sentiment;\n                updateData.$set.lastEmotions = analysis.emotions;\n                if (analysis.recommendations) {\n                    updateData.$set.recommendations = analysis.recommendations;\n                }\n            }\n            await db.collection('conversations').updateOne({\n                _id: new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(conversationId)\n            }, updateData);\n            return await conversationService.getConversation(conversationId);\n        } catch (error) {\n            console.error('Error in addMessage:', error);\n            throw error;\n        }\n    },\n    /**\r\n   * Get a conversation by ID\r\n   * @param {string} conversationId - Conversation ID\r\n   * @returns {Promise<Object>} - Conversation\r\n   */ getConversation: async (conversationId)=>{\n        const { db } = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_0__.connectToDatabase)();\n        if (!conversationId) {\n            console.error('Invalid conversationId provided to getConversation');\n            return null;\n        }\n        try {\n            return await db.collection('conversations').findOne({\n                _id: new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(conversationId)\n            });\n        } catch (error) {\n            console.error('Error in getConversation:', error);\n            return null;\n        }\n    },\n    /**\r\n   * Get all conversations for a user\r\n   * @param {string} userId - User ID\r\n   * @returns {Promise<Array>} - List of conversations\r\n   */ getUserConversations: async (userId)=>{\n        const { db } = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_0__.connectToDatabase)();\n        // Handle case when userId is invalid or undefined\n        if (!userId || typeof userId !== 'string' || userId === 'undefined') {\n            console.log('Invalid userId provided to getUserConversations:', userId);\n            return [];\n        }\n        try {\n            return await db.collection('conversations').find({\n                userId: new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(userId)\n            }).sort({\n                updatedAt: -1\n            }).toArray();\n        } catch (error) {\n            console.error('Error in getUserConversations:', error);\n            return [];\n        }\n    },\n    /**\r\n   * Delete a conversation\r\n   * @param {string} conversationId - Conversation ID\r\n   * @returns {Promise<boolean>} - Success status\r\n   */ deleteConversation: async (conversationId)=>{\n        const { db } = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_0__.connectToDatabase)();\n        if (!conversationId) {\n            console.error('Invalid conversationId provided to deleteConversation');\n            return false;\n        }\n        try {\n            const result = await db.collection('conversations').deleteOne({\n                _id: new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(conversationId)\n            });\n            return result.deletedCount === 1;\n        } catch (error) {\n            console.error('Error in deleteConversation:', error);\n            return false;\n        }\n    },\n    /**\r\n   * Delete all conversations for a user\r\n   * @param {string} userId - User ID\r\n   * @returns {Promise<number>} - Number of deleted conversations\r\n   */ deleteAllConversations: async (userId)=>{\n        const { db } = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_0__.connectToDatabase)();\n        if (!userId || typeof userId !== 'string' || userId === 'undefined') {\n            console.error('Invalid userId provided to deleteAllConversations:', userId);\n            return 0;\n        }\n        try {\n            const result = await db.collection('conversations').deleteMany({\n                userId: new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(userId)\n            });\n            return result.deletedCount;\n        } catch (error) {\n            console.error('Error in deleteAllConversations:', error);\n            return 0;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9zZXJ2aWNlcy9jb252ZXJzYXRpb24tc2VydmljZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQztBQUNhO0FBQ3pCO0FBRW5DOztDQUVDLEdBQ00sTUFBTUcsc0JBQXNCO0lBQ2pDOzs7Ozs7R0FNQyxHQUNEQyxvQkFBb0IsT0FBT0MsUUFBUUMsU0FBU0MsV0FBVyxJQUFJO1FBQ3pELE1BQU0sRUFBRUMsRUFBRSxFQUFFLEdBQUcsTUFBTVIsMkRBQWlCQTtRQUV0QyxrQkFBa0I7UUFDbEIsSUFBSSxDQUFDSyxVQUFVLE9BQU9BLFdBQVcsWUFBWUEsV0FBVyxhQUFhO1lBQ25FSSxRQUFRQyxLQUFLLENBQUMsa0RBQWtETDtZQUNoRSxNQUFNLElBQUlNLE1BQU07UUFDbEI7UUFFQSxJQUFJO1lBQ0YsTUFBTUMsa0JBQWtCO2dCQUN0QixHQUFHWCxvRUFBa0I7Z0JBQ3JCSSxRQUFRLElBQUlILDZDQUFRQSxDQUFDRztnQkFDckJRLE9BQU8sQ0FBQyxhQUFhLEVBQUUsSUFBSUMsT0FBT0MsY0FBYyxJQUFJO2dCQUNwREMsVUFBVTtvQkFDUjt3QkFDRUMsUUFBUTt3QkFDUkMsU0FBU1o7d0JBQ1RhLFdBQVcsSUFBSUw7d0JBQ2ZQLFVBQVVBLFlBQVk7b0JBQ3hCO2lCQUNEO2dCQUNEYSxXQUFXLElBQUlOO2dCQUNmTyxXQUFXLElBQUlQO1lBQ2pCO1lBRUEsTUFBTVEsU0FBUyxNQUFNZCxHQUFHZSxVQUFVLENBQUMsaUJBQWlCQyxTQUFTLENBQUNaO1lBQzlELE9BQU87Z0JBQUUsR0FBR0EsZUFBZTtnQkFBRWEsS0FBS0gsT0FBT0ksVUFBVTtZQUFDO1FBQ3RELEVBQUUsT0FBT2hCLE9BQU87WUFDZEQsUUFBUUMsS0FBSyxDQUFDLGdDQUFnQ0E7WUFDOUMsTUFBTUE7UUFDUjtJQUNGO0lBRUE7Ozs7OztHQU1DLEdBQ0RpQixZQUFZLE9BQU9DLGdCQUFnQnRCLFNBQVNDLFdBQVcsSUFBSTtRQUN6RCxNQUFNLEVBQUVDLEVBQUUsRUFB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QkE7UUFFdEMsSUFBSSxDQUFDSyxVQUFVLE9BQU9BLFdBQVcsWUFBWUEsV0FBVyxhQUFhO1lBQ25FSSxRQUFRQyxLQUFLLENBQUMsc0RBQXNETDtZQUNwRSxPQUFPO1FBQ1Q7UUFFQSxJQUFJO1lBQ0YsTUFBTWlCLFNBQVMsTUFBTWQsR0FBR2UsVUFBVSxDQUFDLGlCQUFpQjBCLFVBQVUsQ0FBQztnQkFDN0Q1QyxRQUFRLElBQUlILDZDQUFRQSxDQUFDRztZQUN2QjtZQUVBLE9BQU9pQixPQUFPeUIsWUFBWTtRQUM1QixFQUFFLE9BQU9yQyxPQUFPO1lBQ2RELFFBQVFDLEtBQUssQ0FBQyxvQ0FBb0NBO1lBQ2xELE9BQU87UUFDVDtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsiRDpcXFByb2plY3RzXFxEZWtodGUgaGFpXFxuZXVyb1N5bmNcXE5ldXJvU3luYy1BSS1Gcm9udGVuZFxcbGliXFxzZXJ2aWNlc1xcY29udmVyc2F0aW9uLXNlcnZpY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdFRvRGF0YWJhc2UgfSBmcm9tICcuLi9tb25nb2RiJztcclxuaW1wb3J0IHsgY29udmVyc2F0aW9uU2NoZW1hIH0gZnJvbSAnLi4vbW9kZWxzL2NvbnZlcnNhdGlvbic7XHJcbmltcG9ydCB7IE9iamVjdElkIH0gZnJvbSAnbW9uZ29kYic7XHJcblxyXG4vKipcclxuICogU2VydmljZSBmb3IgbWFuYWdpbmcgY29udmVyc2F0aW9ucyBpbiBNb25nb0RCXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgY29udmVyc2F0aW9uU2VydmljZSA9IHtcclxuICAvKipcclxuICAgKiBDcmVhdGUgYSBuZXcgY29udmVyc2F0aW9uXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCAtIFVzZXIgSURcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSAtIEluaXRpYWwgbWVzc2FnZSBjb250ZW50XHJcbiAgICogQHBhcmFtIHtPYmplY3R9IGFuYWx5c2lzIC0gT3B0aW9uYWwgc2VudGltZW50IGFuYWx5c2lzXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gLSBDcmVhdGVkIGNvbnZlcnNhdGlvblxyXG4gICAqL1xyXG4gIGNyZWF0ZUNvbnZlcnNhdGlvbjogYXN5bmMgKHVzZXJJZCwgbWVzc2FnZSwgYW5hbHlzaXMgPSBudWxsKSA9PiB7XHJcbiAgICBjb25zdCB7IGRiIH0gPSBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpO1xyXG4gICAgXHJcbiAgICAvLyBWYWxpZGF0ZSB1c2VySWRcclxuICAgIGlmICghdXNlcklkIHx8IHR5cGVvZiB1c2VySWQgIT09ICdzdHJpbmcnIHx8IHVzZXJJZCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignSW52YWxpZCB1c2VySWQgcHJvdmlkZWQgdG8gY3JlYXRlQ29udmVyc2F0aW9uOicsIHVzZXJJZCk7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB1c2VyIElEJyk7XHJcbiAgICB9XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgbmV3Q29udmVyc2F0aW9uID0ge1xyXG4gICAgICAgIC4uLmNvbnZlcnNhdGlvblNjaGVtYSxcclxuICAgICAgICB1c2VySWQ6IG5ldyBPYmplY3RJZCh1c2VySWQpLFxyXG4gICAgICAgIHRpdGxlOiBgQ29udmVyc2F0aW9uICR7bmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygpfWAsXHJcbiAgICAgICAgbWVzc2FnZXM6IFtcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgc2VuZGVyOiAndXNlcicsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IG1lc3NhZ2UsXHJcbiAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKSxcclxuICAgICAgICAgICAgYW5hbHlzaXM6IGFuYWx5c2lzIHx8IG51bGxcclxuICAgICAgICAgIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKSxcclxuICAgICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKClcclxuICAgICAgfTtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2NvbnZlcnNhdGlvbnMnKS5pbnNlcnRPbmUobmV3Q29udmVyc2F0aW9uKTtcclxuICAgICAgcmV0dXJuIHsgLi4ubmV3Q29udmVyc2F0aW9uLCBfaWQ6IHJlc3VsdC5pbnNlcnRlZElkIH07XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBjcmVhdGVDb252ZXJzYXRpb246JywgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9LFxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIEFkZCBhIG1lc3NhZ2UgdG8gYW4gZXhpc3RpbmcgY29udmVyc2F0aW9uXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIC0gQ29udmVyc2F0aW9uIElEXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IG1lc3NhZ2UgLSBNZXNzYWdlIG9iamVjdFxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBhbmFseXNpcyAtIFNlbnRpbWVudCBhbmFseXNpcyByZXN1bHRzXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gLSBVcGRhdGVkIGNvbnZlcnNhdGlvblxyXG4gICAqL1xyXG4gIGFkZE1lc3NhZ2U6IGFzeW5jIChjb252ZXJzYXRpb25JZCwgbWVzc2FnZSwgYW5hbHlzaXMgPSBudWxsKSA9PiB7XHJcbiAgICBjb25zdCB7IGRiIH0gPSBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpO1xyXG4gICAgXHJcbiAgICBpZiAoIWNvbnZlcnNhdGlvbklkKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgY29udmVyc2F0aW9uSWQgcHJvdmlkZWQgdG8gYWRkTWVzc2FnZScpO1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY29udmVyc2F0aW9uIElEJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgICAgJHB1c2g6IHsgbWVzc2FnZXM6IG1lc3NhZ2UgfSxcclxuICAgICAgICAkc2V0OiB7IHVwZGF0ZWRBdDogbmV3IERhdGUoKSB9XHJcbiAgICAgIH07XHJcbiAgICAgIFxyXG4gICAgICAvLyBBZGQgc2VudGltZW50IGFuYWx5c2lzIGlmIGF2YWlsYWJsZVxyXG4gICAgICBpZiAoYW5hbHlzaXMpIHtcclxuICAgICAgICB1cGRhdGVEYXRhLiRzZXQubGFzdFNlbnRpbWVudCA9IGFuYWx5c2lzLnNlbnRpbWVudDtcclxuICAgICAgICB1cGRhdGVEYXRhLiRzZXQubGFzdEVtb3Rpb25zID0gYW5hbHlzaXMuZW1vdGlvbnM7XHJcbiAgICAgICAgaWYgKGFuYWx5c2lzLnJlY29tbWVuZGF0aW9ucykge1xyXG4gICAgICAgICAgdXBkYXRlRGF0YS4kc2V0LnJlY29tbWVuZGF0aW9ucyA9IGFuYWx5c2lzLnJlY29tbWVuZGF0aW9ucztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2NvbnZlcnNhdGlvbnMnKS51cGRhdGVPbmUoXHJcbiAgICAgICAgeyBfaWQ6IG5ldyBPYmplY3RJZChjb252ZXJzYXRpb25JZCkgfSxcclxuICAgICAgICB1cGRhdGVEYXRhXHJcbiAgICAgICk7XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4gYXdhaXQgY29udmVyc2F0aW9uU2VydmljZS5nZXRDb252ZXJzYXRpb24oY29udmVyc2F0aW9uSWQpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gYWRkTWVzc2FnZTonLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgXHJcbiAgLyoqXHJcbiAgICogR2V0IGEgY29udmVyc2F0aW9uIGJ5IElEXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIC0gQ29udmVyc2F0aW9uIElEXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gLSBDb252ZXJzYXRpb25cclxuICAgKi9cclxuICBnZXRDb252ZXJzYXRpb246IGFzeW5jIChjb252ZXJzYXRpb25JZCkgPT4ge1xyXG4gICAgY29uc3QgeyBkYiB9ID0gYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKTtcclxuICAgIFxyXG4gICAgaWYgKCFjb252ZXJzYXRpb25JZCkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdJbnZhbGlkIGNvbnZlcnNhdGlvbklkIHByb3ZpZGVkIHRvIGdldENvbnZlcnNhdGlvbicpO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2NvbnZlcnNhdGlvbnMnKS5maW5kT25lKHtcclxuICAgICAgICBfaWQ6IG5ldyBPYmplY3RJZChjb252ZXJzYXRpb25JZClcclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBnZXRDb252ZXJzYXRpb246JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICB9LFxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIEdldCBhbGwgY29udmVyc2F0aW9ucyBmb3IgYSB1c2VyXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCAtIFVzZXIgSURcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheT59IC0gTGlzdCBvZiBjb252ZXJzYXRpb25zXHJcbiAgICovXHJcbiAgZ2V0VXNlckNvbnZlcnNhdGlvbnM6IGFzeW5jICh1c2VySWQpID0+IHtcclxuICAgIGNvbnN0IHsgZGIgfSA9IGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKCk7XHJcbiAgICBcclxuICAgIC8vIEhhbmRsZSBjYXNlIHdoZW4gdXNlcklkIGlzIGludmFsaWQgb3IgdW5kZWZpbmVkXHJcbiAgICBpZiAoIXVzZXJJZCB8fCB0eXBlb2YgdXNlcklkICE9PSAnc3RyaW5nJyB8fCB1c2VySWQgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdJbnZhbGlkIHVzZXJJZCBwcm92aWRlZCB0byBnZXRVc2VyQ29udmVyc2F0aW9uczonLCB1c2VySWQpO1xyXG4gICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYi5jb2xsZWN0aW9uKCdjb252ZXJzYXRpb25zJylcclxuICAgICAgICAuZmluZCh7IHVzZXJJZDogbmV3IE9iamVjdElkKHVzZXJJZCkgfSlcclxuICAgICAgICAuc29ydCh7IHVwZGF0ZWRBdDogLTEgfSlcclxuICAgICAgICAudG9BcnJheSgpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZ2V0VXNlckNvbnZlcnNhdGlvbnM6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbiAgfSxcclxuICBcclxuICAvKipcclxuICAgKiBEZWxldGUgYSBjb252ZXJzYXRpb25cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQgLSBDb252ZXJzYXRpb24gSURcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0gLSBTdWNjZXNzIHN0YXR1c1xyXG4gICAqL1xyXG4gIGRlbGV0ZUNvbnZlcnNhdGlvbjogYXN5bmMgKGNvbnZlcnNhdGlvbklkKSA9PiB7XHJcbiAgICBjb25zdCB7IGRiIH0gPSBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpO1xyXG4gICAgXHJcbiAgICBpZiAoIWNvbnZlcnNhdGlvbklkKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgY29udmVyc2F0aW9uSWQgcHJvdmlkZWQgdG8gZGVsZXRlQ29udmVyc2F0aW9uJyk7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbignY29udmVyc2F0aW9ucycpLmRlbGV0ZU9uZSh7XHJcbiAgICAgICAgX2lkOiBuZXcgT2JqZWN0SWQoY29udmVyc2F0aW9uSWQpXHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuICAgICAgcmV0dXJuIHJlc3VsdC5kZWxldGVkQ291bnQgPT09IDE7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBkZWxldGVDb252ZXJzYXRpb246JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSxcclxuICBcclxuICAvKipcclxuICAgKiBEZWxldGUgYWxsIGNvbnZlcnNhdGlvbnMgZm9yIGEgdXNlclxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQgLSBVc2VyIElEXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8bnVtYmVyPn0gLSBOdW1iZXIgb2YgZGVsZXRlZCBjb252ZXJzYXRpb25zXHJcbiAgICovXHJcbiAgZGVsZXRlQWxsQ29udmVyc2F0aW9uczogYXN5bmMgKHVzZXJJZCkgPT4ge1xyXG4gICAgY29uc3QgeyBkYiB9ID0gYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKTtcclxuICAgIFxyXG4gICAgaWYgKCF1c2VySWQgfHwgdHlwZW9mIHVzZXJJZCAhPT0gJ3N0cmluZycgfHwgdXNlcklkID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdJbnZhbGlkIHVzZXJJZCBwcm92aWRlZCB0byBkZWxldGVBbGxDb252ZXJzYXRpb25zOicsIHVzZXJJZCk7XHJcbiAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdjb252ZXJzYXRpb25zJykuZGVsZXRlTWFueSh7XHJcbiAgICAgICAgdXNlcklkOiBuZXcgT2JqZWN0SWQodXNlcklkKVxyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIHJldHVybiByZXN1bHQuZGVsZXRlZENvdW50O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZGVsZXRlQWxsQ29udmVyc2F0aW9uczonLCBlcnJvcik7XHJcbiAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG4gIH1cclxufTsgIl0sIm5hbWVzIjpbImNvbm5lY3RUb0RhdGFiYXNlIiwiY29udmVyc2F0aW9uU2NoZW1hIiwiT2JqZWN0SWQiLCJjb252ZXJzYXRpb25TZXJ2aWNlIiwiY3JlYXRlQ29udmVyc2F0aW9uIiwidXNlcklkIiwibWVzc2FnZSIsImFuYWx5c2lzIiwiZGIiLCJjb25zb2xlIiwiZXJyb3IiLCJFcnJvciIsIm5ld0NvbnZlcnNhdGlvbiIsInRpdGxlIiwiRGF0ZSIsInRvTG9jYWxlU3RyaW5nIiwibWVzc2FnZXMiLCJzZW5kZXIiLCJjb250ZW50IiwidGltZXN0YW1wIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0IiwicmVzdWx0IiwiY29sbGVjdGlvbiIsImluc2VydE9uZSIsIl9pZCIsImluc2VydGVkSWQiLCJhZGRNZXNzYWdlIiwiY29udmVyc2F0aW9uSWQiLCJ1cGRhdGVEYXRhIiwiJHB1c2giLCIkc2V0IiwibGFzdFNlbnRpbWVudCIsInNlbnRpbWVudCIsImxhc3RFbW90aW9ucyIsImVtb3Rpb25zIiwicmVjb21tZW5kYXRpb25zIiwidXBkYXRlT25lIiwiZ2V0Q29udmVyc2F0aW9uIiwiZmluZE9uZSIsImdldFVzZXJDb252ZXJzYXRpb25zIiwibG9nIiwiZmluZCIsInNvcnQiLCJ0b0FycmF5IiwiZGVsZXRlQ29udmVyc2F0aW9uIiwiZGVsZXRlT25lIiwiZGVsZXRlZENvdW50IiwiZGVsZXRlQWxsQ29udmVyc2F0aW9ucyIsImRlbGV0ZU1hbnkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./lib/services/conversation-service.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fconversations&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cconversations%5Cindex.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fconversations&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cconversations%5Cindex.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_conversations_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\conversations\\index.js */ \"(api-node)/./pages/api/conversations/index.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_conversations_index_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_conversations_index_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/conversations\",\n        pathname: \"/api/conversations\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_conversations_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGY29udmVyc2F0aW9ucyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDY29udmVyc2F0aW9ucyU1Q2luZGV4LmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQ2tFO0FBQ2xFO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyw4REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsOERBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcY29udmVyc2F0aW9uc1xcXFxpbmRleC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY29udmVyc2F0aW9uc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NvbnZlcnNhdGlvbnNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fconversations&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cconversations%5Cindex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/conversations/index.js":
/*!******************************************!*\
  !*** ./pages/api/conversations/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_services_conversation_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/services/conversation-service */ \"(api-node)/./lib/services/conversation-service.js\");\n\n/**\r\n * API handler for conversation operations\r\n * GET: Fetch user conversations\r\n * POST: Create a new conversation\r\n * DELETE: Clear all user conversations\r\n */ async function handler(req, res) {\n    // Basic authentication check - in a real app, use proper auth middleware\n    // For this app, we'll accept the userId from the request directly\n    const userId = req.body.userId || req.query.userId;\n    if (!userId) {\n        return res.status(401).json({\n            error: 'UserId is required for authentication'\n        });\n    }\n    try {\n        // Handle different HTTP methods\n        switch(req.method){\n            case 'GET':\n                const conversations = await _lib_services_conversation_service__WEBPACK_IMPORTED_MODULE_0__.conversationService.getUserConversations(userId);\n                return res.status(200).json(conversations);\n            case 'POST':\n                const { message, analysis } = req.body;\n                if (!message) {\n                    return res.status(400).json({\n                        error: 'Message is required'\n                    });\n                }\n                const newConversation = await _lib_services_conversation_service__WEBPACK_IMPORTED_MODULE_0__.conversationService.createConversation(userId, message, analysis);\n                return res.status(201).json(newConversation);\n            case 'DELETE':\n                // Clear all conversations for the user\n                const result = await _lib_services_conversation_service__WEBPACK_IMPORTED_MODULE_0__.conversationService.deleteAllConversations(userId);\n                return res.status(200).json({\n                    success: true,\n                    deleted: result\n                });\n            default:\n                return res.status(405).json({\n                    error: 'Method not allowed'\n                });\n        }\n    } catch (error) {\n        console.error('Conversation API error:', error);\n        return res.status(500).json({\n            error: 'Internal server error'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9jb252ZXJzYXRpb25zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlGO0FBRWpGOzs7OztDQUtDLEdBQ2MsZUFBZUMsUUFBUUMsR0FBRyxFQUFFQyxHQUFHO0lBQzVDLHlFQUF5RTtJQUN6RSxrRUFBa0U7SUFDbEUsTUFBTUMsU0FBU0YsSUFBSUcsSUFBSSxDQUFDRCxNQUFNLElBQUlGLElBQUlJLEtBQUssQ0FBQ0YsTUFBTTtJQUVsRCxJQUFJLENBQUNBLFFBQVE7UUFDWCxPQUFPRCxJQUFJSSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBd0M7SUFDL0U7SUFFQSxJQUFJO1FBQ0YsZ0NBQWdDO1FBQ2hDLE9BQVFQLElBQUlRLE1BQU07WUFDaEIsS0FBSztnQkFDSCxNQUFNQyxnQkFBZ0IsTUFBTVgsbUZBQW1CQSxDQUFDWSxvQkFBb0IsQ0FBQ1I7Z0JBQ3JFLE9BQU9ELElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUNHO1lBRTlCLEtBQUs7Z0JBQ0gsTUFBTSxFQUFFRSxPQUFPLEVBQUVDLFFBQVEsRUFBRSxHQUFHWixJQUFJRyxJQUFJO2dCQUV0QyxJQUFJLENBQUNRLFNBQVM7b0JBQ1osT0FBT1YsSUFBSUksTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQzt3QkFBRUMsT0FBTztvQkFBc0I7Z0JBQzdEO2dCQUVBLE1BQU1NLGtCQUFrQixNQUFNZixtRkFBbUJBLENBQUNnQixrQkFBa0IsQ0FBQ1osUUFBUVMsU0FBU0M7Z0JBQ3RGLE9BQU9YLElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUNPO1lBRTlCLEtBQUs7Z0JBQ0gsdUNBQXVDO2dCQUN2QyxNQUFNRSxTQUFTLE1BQU1qQixtRkFBbUJBLENBQUNrQixzQkFBc0IsQ0FBQ2Q7Z0JBQ2hFLE9BQU9ELElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7b0JBQUVXLFNBQVM7b0JBQU1DLFNBQVNIO2dCQUFPO1lBRS9EO2dCQUNFLE9BQU9kLElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7b0JBQUVDLE9BQU87Z0JBQXFCO1FBQzlEO0lBQ0YsRUFBRSxPQUFPQSxPQUFPO1FBQ2RZLFFBQVFaLEtBQUssQ0FBQywyQkFBMkJBO1FBQ3pDLE9BQU9OLElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUF3QjtJQUMvRDtBQUNGIiwic291cmNlcyI6WyJEOlxcUHJvamVjdHNcXERla2h0ZSBoYWlcXG5ldXJvU3luY1xcTmV1cm9TeW5jLUFJLUZyb250ZW5kXFxwYWdlc1xcYXBpXFxjb252ZXJzYXRpb25zXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJzYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vbGliL3NlcnZpY2VzL2NvbnZlcnNhdGlvbi1zZXJ2aWNlJztcclxuXHJcbi8qKlxyXG4gKiBBUEkgaGFuZGxlciBmb3IgY29udmVyc2F0aW9uIG9wZXJhdGlvbnNcclxuICogR0VUOiBGZXRjaCB1c2VyIGNvbnZlcnNhdGlvbnNcclxuICogUE9TVDogQ3JlYXRlIGEgbmV3IGNvbnZlcnNhdGlvblxyXG4gKiBERUxFVEU6IENsZWFyIGFsbCB1c2VyIGNvbnZlcnNhdGlvbnNcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuICAvLyBCYXNpYyBhdXRoZW50aWNhdGlvbiBjaGVjayAtIGluIGEgcmVhbCBhcHAsIHVzZSBwcm9wZXIgYXV0aCBtaWRkbGV3YXJlXHJcbiAgLy8gRm9yIHRoaXMgYXBwLCB3ZSdsbCBhY2NlcHQgdGhlIHVzZXJJZCBmcm9tIHRoZSByZXF1ZXN0IGRpcmVjdGx5XHJcbiAgY29uc3QgdXNlcklkID0gcmVxLmJvZHkudXNlcklkIHx8IHJlcS5xdWVyeS51c2VySWQ7XHJcbiAgXHJcbiAgaWYgKCF1c2VySWQpIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiAnVXNlcklkIGlzIHJlcXVpcmVkIGZvciBhdXRoZW50aWNhdGlvbicgfSk7XHJcbiAgfVxyXG4gIFxyXG4gIHRyeSB7XHJcbiAgICAvLyBIYW5kbGUgZGlmZmVyZW50IEhUVFAgbWV0aG9kc1xyXG4gICAgc3dpdGNoIChyZXEubWV0aG9kKSB7XHJcbiAgICAgIGNhc2UgJ0dFVCc6XHJcbiAgICAgICAgY29uc3QgY29udmVyc2F0aW9ucyA9IGF3YWl0IGNvbnZlcnNhdGlvblNlcnZpY2UuZ2V0VXNlckNvbnZlcnNhdGlvbnModXNlcklkKTtcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oY29udmVyc2F0aW9ucyk7XHJcbiAgICAgICAgXHJcbiAgICAgIGNhc2UgJ1BPU1QnOlxyXG4gICAgICAgIGNvbnN0IHsgbWVzc2FnZSwgYW5hbHlzaXMgfSA9IHJlcS5ib2R5O1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICghbWVzc2FnZSkge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdNZXNzYWdlIGlzIHJlcXVpcmVkJyB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgbmV3Q29udmVyc2F0aW9uID0gYXdhaXQgY29udmVyc2F0aW9uU2VydmljZS5jcmVhdGVDb252ZXJzYXRpb24odXNlcklkLCBtZXNzYWdlLCBhbmFseXNpcyk7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5qc29uKG5ld0NvbnZlcnNhdGlvbik7XHJcbiAgICAgIFxyXG4gICAgICBjYXNlICdERUxFVEUnOlxyXG4gICAgICAgIC8vIENsZWFyIGFsbCBjb252ZXJzYXRpb25zIGZvciB0aGUgdXNlclxyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbnZlcnNhdGlvblNlcnZpY2UuZGVsZXRlQWxsQ29udmVyc2F0aW9ucyh1c2VySWQpO1xyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IHN1Y2Nlc3M6IHRydWUsIGRlbGV0ZWQ6IHJlc3VsdCB9KTtcclxuICAgICAgICBcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBlcnJvcjogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0NvbnZlcnNhdGlvbiBBUEkgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIH0pO1xyXG4gIH1cclxufSAiXSwibmFtZXMiOlsiY29udmVyc2F0aW9uU2VydmljZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJ1c2VySWQiLCJib2R5IiwicXVlcnkiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJtZXRob2QiLCJjb252ZXJzYXRpb25zIiwiZ2V0VXNlckNvbnZlcnNhdGlvbnMiLCJtZXNzYWdlIiwiYW5hbHlzaXMiLCJuZXdDb252ZXJzYXRpb24iLCJjcmVhdGVDb252ZXJzYXRpb24iLCJyZXN1bHQiLCJkZWxldGVBbGxDb252ZXJzYXRpb25zIiwic3VjY2VzcyIsImRlbGV0ZWQiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/conversations/index.js\n");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fconversations&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cconversations%5Cindex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();